<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>XAML Property</Title>
			<Shortcut>#prop</Shortcut>
			<Description>
			</Description>
			<Author>zeroflag</Author>
		</Header>
		<Snippet>
			<Declarations>
				<Literal Editable="true">
					<ID>Name</ID>
					<ToolTip>The property's name</ToolTip>
					<Default>Property</Default>
					<Function>
					</Function>
				</Literal>
				<Literal Editable="true">
					<ID>Documentation</ID>
					<ToolTip>The documentation for this property.</ToolTip>
					<Default>//TODO: Add documentation</Default>
					<Function>
					</Function>
				</Literal>
				<Object Editable="true">
					<ID>Type</ID>
					<ToolTip>The parameter's type.</ToolTip>
					<Default>string</Default>
					<Function>
					</Function>
				</Object>
				<Object Editable="false">
					<ID>Class</ID>
					<Function>ClassName()</Function>
				</Object>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
private $Type$ _$Name$;

public static readonly DependencyProperty $Name$Property =
DependencyProperty.Register("$Name$", typeof($Type$), typeof($Class$), new FrameworkPropertyMetadata());

public static readonly RoutedEvent $Name$ChangedEvent = 
EventManager.RegisterRoutedEvent("$Name$Changed", RoutingStrategy.Bubble, typeof(RoutedEventHandler), typeof($Class$));

#region $Name$

/// <summary>
/// $Documentation$
/// </summary>
public $Type$ $Name$
{
get { return _$Name$; }
set
{
if (_$Name$ != value)
{
_$Name$ = value;
this.On$Name$Changed();
}
}
}

#region $Name$Changed event

/// <summary>
/// Occurs when $Name$ changes.
/// </summary>
public event RoutedEventHandler $Name$Changed
{
add { AddHandler($Name$ChangedEvent, value); } 
remove { RemoveHandler($Name$ChangedEvent, value); }
}

/// <summary>
/// Raises the $Name$Changed event.
/// </summary>
protected virtual void On$Name$Changed()
{
RoutedEventArgs e = new RoutedEventArgs($Name$ChangedEvent);
RaiseEvent(e);
}

#endregion $Name$Changed event
#endregion $Name$
]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>